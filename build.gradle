buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

plugins {
	id 'org.hidetake.ssh' version '2.0.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

ext {
	baseNameJar = 'bookstore'
	versionJar = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


jar {
	baseName = "${baseNameJar}"
	version = "${versionJar}"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-devtools")

	compile("com.h2database:h2")

	testCompile('org.springframework.boot:spring-boot-starter-test')
}


remotes {
	webServer {
		host = '52.40.9.147'
		user = 'ubuntu'
		identity = file(new File('/home/leonardo/.ssh/qualidade-amazon-01.pem'))
	}
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task deploy << {
	ssh.run {
		session(remotes.webServer) {
			String fileName = "${baseNameJar}-${versionJar}.jar";

			put from: "build/libs/${fileName}", into: '/home/ubuntu'
			execute "java -jar /home/ubuntu/${fileName}"
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}


